// NKINV
const max=60000;
type int=longint;
var n,i,ma:longint;
    res:int;
    x:longint;
    f:array[1..max shl 2+1] of int;
    a:array[1..max] of longint;
procedure Up(p,l,r,x:longint);
          var mid:longint;
          begin
               if (x<l)or(x>r) then exit;
               inc(f[p]);
               if l=r then exit;
               mid:=(l+r) shr 1;
               if x>mid then Up(p shl 1+1,mid+1,r,x)
               else Up(p shl 1,l,mid,x);
          end;
function Get(p,l,r,x:longint):longint;
         var mid:longint;
         begin
              Get:=0;
              if (x<l)or(x>r) then exit;
              if r=x then
                 begin
                      get:=f[p];exit;
                 end;
              mid:=(l+r)shr 1;
              if x>mid then Get:=f[p shl 1]+Get(p shl 1+1,mid+1,r,x)
              else Get:=Get(p shl 1,l,mid,x);
         end;
begin
read(n);
ma:=0;
for i:=1 to n do
    begin
         read(a[i]);
         if ma<a[i] then ma:=a[i];
    end;
for i:=n downto 1 do
    begin
         if a[i]>1 then inc(res,get(1,1,ma,a[i]-1));
         Up(1,1,ma,a[i]);
    end;
write(res);
end.
