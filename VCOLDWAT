using namespace std;
#include<algorithm>
#include<vector>
#include<list>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<cmath>
#include<cassert>
#define FOR(i, a, b) for(int i=(a), _b=(b); i < _b; ++i)
#define FORE(i, a, b) for(int i=(a), _b=(b); i <= _b; ++i)
#define FORD(i, a, b) for(int i=(a), _b=(b); i >= _b; --i)
#define MP make_pair
#define PB push_back
#define TR(c, it) for(typeof((c).begin()) it=(c).begin(); it!=(c).end(); it++)
 
typedef pair<int, int> II;
typedef vector<int> VI;
typedef vector<II> VII;
typedef vector<VI> VVI;
typedef vector<VII> VVII;
 
const int DBG = 0;
const int HOME = 0;
const int MAXN = 100000;
const int INF = 1000000001;
 
int n, m, x, u, v;
int l[MAXN], r[MAXN], d[MAXN];
 
void DFS(int u, int k){
   d[u] = k;
   if(l[u]) DFS(l[u], k+1);
   if(r[u]) DFS(r[u], k+1);
}
 
int main(){
   if(HOME){
      freopen("VCOLDWAT.inp", "r", stdin);
      freopen("VCOLDWAT.out", "w", stdout);
   }
 
   scanf("%d %d", &n, &m);
 
   FOR(i, 0, m){
      scanf("%d %d %d", &x, &u, &v);
      l[x] = u; r[x] = v;
   }
 
   DFS(1, 1);
   FORE(i, 1, n) printf("%d\n", d[i]);
 
   return 0;
}
