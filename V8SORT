const max=5040;
      oo=1000000000;
type hoanvi=array[1..7] of longint;
var c:array[1..7,1..7] of longint;
    hv:array[1..max] of hoanvi;
    n,i,j,m,u,v,cc,mm,k,count:longint;
    f:array[1..7] of boolean;
    tmp,a:hoanvi;
    d,h,vt:array[1..max] of longint;
    free:array[1..max] of boolean;
    ds,cp:array[1..max,1..21] of longint;
function Shhv(x:hoanvi):longint;
         const gt:array[0..6] of longint=(1,1,2,6,24,120,720);
         var f:array[1..7] of boolean;
             c,i,j,r:longint;
         begin
              fillchar(f,sizeof(f),true);
              r:=0;
              for i:=1 to n do
                  begin
                       f[x[i]]:=false;
                       c:=0;
                       for j:=1 to x[i] do
                           if f[j] then inc(c);
                       inc(r,c*gt[n-i]);
                  end;
              shhv:=r+1;
         end; 
procedure Creat(u:longint);
          var i:longint;
          begin
               if u>n then
                  begin
                       inc(m);
                       hv[m]:=tmp;
                       exit;
                  end;
               for i:=1 to n do
                   if not f[i] then
                      begin
                           f[i]:=true;
                           tmp[u]:=i;
                           Creat(u+1);
                           f[i]:=false;
                      end;
          end;
function Finish(x:hoanvi):boolean;
         var i:longint;
         begin
              Finish:=false;
              for i:=2 to n do
                  if a[x[i]]<a[x[i-1]] then exit;
              Finish:=true;    
         end;
function Cost(x,y:hoanvi):longint;
         var r,i,j:longint;
             cc:longint;
         begin
              cost:=oo;
              cc:=0;r:=0;
              for i:=1 to n do
                  if x[i]<>y[i] then
                     begin
                          inc(cc);
                          inc(r,c[x[i],y[i]]);
                     end;
              if cc<>2 then exit;
              cost:=r;
         end;
procedure Down(i:longint);
          label 1;
          var t,c,r:longint;
          begin
               r:=i;
               t:=h[i];
               while r shl 1<=m do
                     begin
                          c:=r shl 1;
                          if c<m then
                             if d[h[c]]>d[h[c+1]] then inc(c);
                          if d[h[c]]>=d[t] then goto 1;
                          h[r]:=h[c];
                          vt[h[r]]:=r;
                          r:=c;
                     end;
               1:
               h[r]:=t;
               vt[t]:=r;
          end;
procedure Up(i:longint);
          label 1;
          var t,c,r:longint;
          begin
               c:=i;
               t:=h[i];
               while c>1 do
                     begin
                          r:=c shr 1;
                          if d[h[r]]<=d[t] then goto 1;
                          h[c]:=h[r];
                          vt[h[c]]:=c;
                          c:=r;
                     end;
               1:
               h[c]:=t;
               vt[t]:=c;
          end;
procedure Swap(var x,y:longint);
          var t:longint;
          begin
               t:=x;x:=y;y:=t;
          end;
begin
repeat
      inc(n);
      read(a[n]);
until eoln;
for i:=1 to n do
    for j:=1 to n do read(c[i,j]);
Creat(1);
mm:=m;
{----------------}
for i:=1 to m do
    begin
         tmp:=hv[i];
         count:=0;
         for j:=1 to n-1 do
             for k:=j+1 to n do
                 begin
                      inc(count);
                      swap(tmp[j],tmp[k]);
                      ds[i,count]:=shhv(tmp);
                      cp[i,count]:=c[j,k];
                      swap(tmp[j],tmp[k]);
                 end;
    end;
{----------------}
for i:=2 to m do
    begin
         h[i]:=i;
         vt[i]:=i;
         d[i]:=oo;
    end;
d[1]:=0;h[1]:=1;vt[1]:=1;
repeat
      u:=h[1];
      if finish(hv[u]) then
         begin
              write(d[u]);exit;
         end;
      free[u]:=true;
      h[1]:=h[m];
      vt[h[1]]:=1;
      dec(m);
      Down(1);
      for i:=1 to count do
          begin
               v:=ds[u,i];
               if not free[v] then
                  begin
                       cc:=d[u]+cp[u,i];
                       if d[v]>cc then
                          begin
                               d[v]:=cc;
                               Up(vt[v]);                  
                          end;
                  end;
          end;
until false; 
end.
