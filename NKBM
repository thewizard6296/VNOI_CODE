#include<algorithm>
#include<vector>
using namespace std;
#define FOR(i, a, b) for(int i=(a), _b=(b); i < _b; ++i)
#define FORE(i, a, b) for(int i=(a), _b=(b); i <= _b; ++i)
#define FORD(i, a, b) for(int i=(a), _b=(b); i >= _b; --i)
#define PB(a) push_back(a)
#define TR(c, it) for(typeof((c).begin()) it=(c).begin(); it!=(c).end(); it++)
typedef vector<int> VI;
typedef vector<VI> VVI;
typedef pair<int, int> II;
typedef pair<int, II> III;
typedef vector<II> VII;
typedef vector<VII> VVII;
 
const int DBG = 0;
const int HOME = 0;
const int MAXN = 10+1000;
const int INF = 1000000001;
 
int m, n, t, res, ret;
int a[MAXN][MAXN];
int d[MAXN], mx[MAXN], my[MAXN], q[MAXN], tr[MAXN], x[MAXN];
 
bool aug(int u){
   int front = 0, back = 0, v;
   memset(x, 0, sizeof x);
   q[back++] = u;
   while(front<back){
      u = q[front++];
      FOR(i, 0, d[u]) if(!x[ v = a[u][i] ]){
         tr[v] = u;
         if(!my[v]){ ret = v; return true; }
         q[back++] = my[v]; x[v] = 1;
      }
   }
   return false;
}
 
void enlarge(int s){
   int u, v = ret, t;
   while(!mx[s]){
      u = tr[v]; t = mx[u];
      my[v] = u; mx[u] = v;
      v = t;
   }
}
 
int main(){
   if(HOME){
      freopen("NKBM.inp", "r", stdin);
      freopen("NKBM.out", "w", stdout);
   }
 
   scanf("%d %d %d", &m, &n, &t);
   int u, v;
   FOR(i, 0, t){
      scanf("%d %d", &u, &v);
      a[u][d[u]++] = v;
   }
 
   FORE(i, 1, m) if(aug(i)){ res++; enlarge(i); }
   printf("%d\n", res);
   if(DBG){
      FORE(i, 1, m) if(mx[i]) printf("%d %d\n", i, mx[i]);
   }
 
   return 0;
}
