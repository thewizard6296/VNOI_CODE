using namespace std;
#include<algorithm>
#include<vector>
#include<list>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<cmath>
#include<cassert>
#define FOR(i, a, b) for(int i=(a), _b=(b); i < _b; ++i)
#define FORE(i, a, b) for(int i=(a), _b=(b); i <= _b; ++i)
#define FORD(i, a, b) for(int i=(a), _b=(b); i >= _b; --i)
#define MP make_pair
#define PB push_back
#define TR(c, it) for(typeof((c).begin()) it=(c).begin(); it!=(c).end(); it++)
 
const int DBG = 0;
const int HOME = 0;
const int MAXN = 10+25000;
const int INF = 2000000001;
 
typedef pair<int, int> II;
typedef vector<int> VI;
typedef vector<II> VII;
typedef vector<VI> VVI;
typedef vector<VII> VVII;
 
 
int main(){
   if(HOME){
      freopen("NKCABLE.inp", "r", stdin);
      freopen("NKCABLE.out", "w", stdout);
   }
 
   int n;
   int l[MAXN], f[MAXN];
 
   scanf("%d", &n);
   FOR(i, 0, n-1) scanf("%d", l+i);
   f[0] = INF; f[1] = l[0];
 
   FOR(i, 2, n) f[i] = l[i-1] + (f[i-1] <? f[i-2]);
 
   printf("%d\n", f[n-1]);
   return 0;
}
